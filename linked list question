// linked list question 

// Node class representing each element in the linked list
class Node<T> {
  T value;
  Node<T>? next;

  Node(this.value);

  @override
  String toString() => '$value';
}

// Linked List class with basic operations
class LinkedList<T> {
  Node<T>? head;

  // Add a new value at the end of the list
  void append(T value) {
    var newNode = Node(value);
    if (head == null) {
      head = newNode;
    } else {
      var current = head;
      while (current!.next != null) {
        current = current.next;
      }
      current.next = newNode;
    }
  }

  // Print the list elements
  void printList() {
    var current = head;
    while (current != null) {
      print(current.value);
      current = current.next;
    }
  }

  @override
  String toString() {
    var current = head;
    var result = '';
    while (current != null) {
      result += '${current.value} -> ';
      current = current.next;
    }
    return result + 'null';
  }
}

void main() {
  var list = LinkedList<int>();
  list.append(10);
  list.append(20);
  list.append(30);
  print('Linked List:');
  list.printList();
  print('Linked List as String: ${list.toString()}');
}
