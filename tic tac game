import 'dart:io';

void main() {
  List<String> board = List.generate(9, (i) => (i + 1).toString());
  String currentPlayer = 'X'; // start by player x

  while (true) {
    displayBoard(board);
    print("Player $currentPlayer turn, choose a number from 1 to 9 : ");
    int? move = int.tryParse(stdin.readLineSync() ?? '');

    if (move == null || move < 1 || move > 9 || board[move - 1] == 'X' || board[move - 1] == 'O') {
      print("Invalid move. Try again.");
      continue;
    }

    board[move - 1] = currentPlayer;

    if (isWinner(board, currentPlayer)) {
      displayBoard(board);
      print("Congrats the winner is $currentPlayer ");
      break;
    }

    if (!board.any((e) => e != 'X' && e != 'O')) {
      print("Draw. Try again to win");
      break;
    }

    currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
  }
}
void displayBoard(List<String> board) {
  for (int i = 0; i < 9; i += 3) {
    print("${board[i]} | ${board[i + 1]} | ${board[i + 2]}");
    if (i < 6) print("- | - | -");
  }
}

bool isWinner(List<String> board, String player) {
  const List<List<int>> winPatterns = [
    [0, 1, 2], [3, 4, 5], [6, 7, 8], // row
    [0, 3, 6], [1, 4, 7], [2, 5, 8], // column
    [0, 4, 8], [2, 4, 6] // diag.
  ];
  for (var pattern in winPatterns) {
    if (board[pattern[0]] == player &&
        board[pattern[1]] == player &&
        board[pattern[2]] == player) {
      return true;
    }
  }
  return false;
}

